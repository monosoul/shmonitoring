<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<configuration xmlns="http://www.jooq.org/xsd/jooq-codegen-3.18.0.xsd">
    <generator>
        <name>org.jooq.codegen.KotlinGenerator</name>
        <generate>
            <kotlinNotNullRecordAttributes>true</kotlinNotNullRecordAttributes>
        </generate>
        <database>
            <schemata>
                <schema>
                    <inputSchema>public</inputSchema>
                    <outputSchemaToDefault>true</outputSchemaToDefault>
                </schema>
            </schemata>
            <forcedTypes>
                <forcedType>
                    <userType>dev.monosoul.shmonitoring.model.EventId</userType>
                    <includeTypes>uuid</includeTypes>
                    <includeExpression>.*\.events\.id</includeExpression>
                    <converter>dev.monosoul.shmonitoring.persistence.JooqConverters.get()</converter>
                </forcedType>
                <forcedType>
                    <userType>dev.monosoul.shmonitoring.model.HostName</userType>
                    <includeTypes>text</includeTypes>
                    <includeExpression>.*\.events\.host_name</includeExpression>
                    <converter>dev.monosoul.shmonitoring.persistence.JooqConverters.get()</converter>
                </forcedType>
                <forcedType>
                    <userType>dev.monosoul.shmonitoring.model.ServiceName</userType>
                    <includeTypes>text</includeTypes>
                    <includeExpression>.*\.events\.service_name</includeExpression>
                    <converter>dev.monosoul.shmonitoring.persistence.JooqConverters.get()</converter>
                </forcedType>
                <forcedType>
                    <userType>dev.monosoul.shmonitoring.model.TeamName</userType>
                    <includeTypes>text</includeTypes>
                    <includeExpression>.*\.events\.owning_team_name</includeExpression>
                    <converter>dev.monosoul.shmonitoring.persistence.JooqConverters.get()</converter>
                </forcedType>
            </forcedTypes>
        </database>
    </generator>
</configuration>
